# CMakeList.txt : CMake project for AsteroidsCMake, include source and define
# project specific logic here.
#
cmake_minimum_required (VERSION 3.8)

add_compile_options ($<$<CXX_COMPILER_ID:MSVC>:/MP>)
add_compile_options ($<$<CXX_COMPILER_ID:MSVC>:/GR->)

include_directories (${CMAKE_SOURCE_DIR})
include_directories ($ENV{VULKAN_SDK}/Include)
include_directories (${CMAKE_SOURCE_DIR}/External/glm)
include_directories (${CMAKE_SOURCE_DIR}/External/tinygltf)
include_directories (${CMAKE_SOURCE_DIR}/External/stb)

link_directories ($ENV{VULKAN_SDK}/Lib32)
link_directories ($ENV{VULKAN_SDK}/Lib)

set (AssetHPP "static_meshes.hpp" "texture.hpp" "static_graphics_primitives.hpp" "material.hpp")
set (AssetCPP "static_meshes.cpp" "texture.cpp" "static_graphics_primitives.cpp" "material.cpp")

set (SceneHPP "scene.hpp" "test_scene.hpp" "scene_graphics.hpp" "scene_physics.hpp")
set (SceneCPP "scene.cpp" "test_scene.cpp" "scene_graphics.cpp" "scene_physics.cpp")

set (GlobalHPP "utils.hpp" "vk_utils.hpp" "common_graphics.hpp" "vk_asset.hpp" "gltf_models.hpp" "game.hpp")
set (GlobalCPP "utils.cpp" "vk_utils.cpp" "common_graphics.cpp" "vk_asset.cpp" "gltf_models.cpp" "game.cpp")

set (MainCPP "main.cpp")

set (H ${SceneHPP} ${GlobalHPP} ${AssetHPP})
set (C ${MainCPP} ${SceneCPP} ${GlobalCPP} ${AssetCPP})

set (GLSL "Assets/pbr_opaque.vert" "Assets/pbr_opaque.frag")

source_group (${GLSL})

add_executable (Asteroids WIN32 ${H} ${C})
add_compile_definitions (Asteroids _CRT_SECURE_NO_WARNINGS UNICODE WIN32_LEAN_AND_MEAN VK_USE_PLATFORM_WIN32_KHR)
target_link_libraries (Asteroids vulkan-1)
target_link_libraries (Asteroids Shlwapi)

#add_custom_command (TARGET Asteroids POST_BUILD COMMAND ${CMAKE_COMMAND} -E copy_directory "${CMAKE_SOURCE_DIR}/Asteroids/Assets" $<TARGET_FILE_DIR:Asteroids>)
